/* loader */
#loader {
  position: fixed;
  inset: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background: rgba(5, 10, 20, 0.92);
  z-index: 9999;
  transition: opacity 0.6s ease;
}

#loader.hide {
  opacity: 0;
  pointer-events: none;
}

.spinner {
  width: 70px;
  height: 70px;
  border: 6px solid rgba(0, 245, 255, 0.2); /* base translúcida */
  border-top: 6px solid #00F5FF;            /* tono principal */
  border-radius: 50%;
  animation: spin 0.8s linear infinite, glow 1.5s ease-in-out infinite alternate;
  box-shadow: 0 0 12px #00F5FF, 0 0 24px #00F5FF, 0 0 48px #00F5FF;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes glow {
  from {
    box-shadow: 0 0 8px #00F5FF, 0 0 16px rgba(0, 245, 255, 0.7), 0 0 32px rgba(0, 245, 255, 0.4);
  }
  to {
    box-shadow: 0 0 16px #00F5FF, 0 0 32px rgba(0, 245, 255, 0.9), 0 0 64px rgba(0, 245, 255, 0.6);
  }
}



/* Global CSS styles for the web3 developer portfolio */
* {
  cursor: none !important;
}
.glitch-container:hover .glitch {
  animation: glitch 0.3s linear infinite;
}
.glitch {
  position: relative;
  display: inline-block;
}
.glitch-container:hover .glitch::before,
.glitch-container:hover .glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #0D0F18;
  overflow: hidden;
}
.glitch-container:hover .glitch::before {
  left: 2px;
  text-shadow: -2px 0 #FF00E5;
  clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
  animation: glitch 2s infinite linear reverse;
}
.glitch-container:hover .glitch::after {
  left: -2px;
  text-shadow: -2px 0 #00F5FF, 2px 2px #FF00E5;
  clip-path: polygon(0 55%, 100% 55%, 100% 100%, 0 100%);
  animation: glitch 2.5s infinite linear reverse;
}
.decode-char {
  animation: decode-char 0.8s ease-out forwards;
  display: inline-block;
}
.typing-cursor::after {
  content: '_';
  color: #00F5FF; /* neon cyan */
  animation: blink 1s step-end infinite;
}
.glitch-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  background: transparent;
  animation: subtle-glitch 8s step-end infinite;
}

/* === Honeycomb reusando tu técnica moderna (clip-path + shape-outside) === */
.honey-main {
  position:fixed; inset:-200px; /* más sangrado para cubrir lados/scroll */
  /* Ajustes rápidos del panal */ 
  --s: 38px; /* tamaño celda (ancho) */
  --m: 2px; /* margen entre celdas */ 
  --line: rgba(0,245,255,.28);
  --fill: rgba(0,245,255,.05); 
  --f: calc(1.732 * var(--s) + 4 * var(--m) - 1px); /* desplazamiento filas */ } 
  
  .honey-container { 
    font-size: 0; 
    width: 100%; 
    height: 100%; 
  } 
  
  .honey-container::before {
    content: ""; 
    width: calc(var(--s)/2 + var(--m)); 
    float: left; 
    height: 120%; 
    shape-outside: repeating-linear-gradient(#0000 0 calc(var(--f) - 3px), #000 var(--f)); 
  } 
  
  .honey-cell { 
    width: var(--s);
    height: calc(var(--s)*1.1547); /* ≈ s * 2/√3 */ 
    margin: var(--m); 
    margin-bottom: calc(var(--m) - var(--s)*0.2885); 
    display: inline-block; 
    clip-path: polygon(0% 25%, 0% 75%, 50% 100%, 100% 75%, 100% 25%, 50% 0%); 
    background: var(--fill); 
  }

/* === Efectos previos === */
@keyframes nodePulse { 0%,100%{opacity:.35;transform:scale(.92)} 50%{opacity:.8;transform:scale(1.08)} }
@keyframes gridShift { 0%{background-position:0 0} 100%{background-position:60px 0} }
@keyframes flicker { 0%,19%,21%,59%,61%,100%{opacity:.25} 20%,60%{opacity:.1} }
@keyframes glitchSweep { 0%,96%,100%{opacity:0} 97%{opacity:.9;transform:translateY(-1px)} 98%{opacity:.4;transform:translateY(2px)} 99%{opacity:.8;transform:translateY(-1px)} }
@keyframes fade-in { from { opacity: 0; } to { opacity: 1; } }
@media (prefers-reduced-motion: reduce){ .fixed.inset-0 > div { animation: none !important } }